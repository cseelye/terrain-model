#!/usr/bin/env bash
set -euo pipefail

BLENDER_BRANCH=${BLENDER_BRANCH-"blender-v2.93-release"}
CORES=${CORES-8}
WORK_DIR=${BLENDER_WORK_DIR-/blender-build}

# Get the blender source
# The blender repos can be very slow sometimes and disconnect during cloning, so wrap the commands in a loop to keep trying
# If the directories already exist, assume someone clones the repos ahead of time and just reuse them
if [[ ! -e ${WORK_DIR}/lib ]]; then
    mkdir -p ${WORK_DIR}/lib
    pushd ${WORK_DIR}/lib
    if [[ -e ${WORK_DIR}/lib/linux_centos7_x86_64 ]]; then
        pushd ${WORK_DIR}/lib/linux_centos7_x86_64
        svn cleanup
        popd
    fi
    time until svn --non-interactive checkout https://svn.blender.org/svnroot/bf-blender/trunk/lib/linux_centos7_x86_64; do
        pushd ${WORK_DIR}/lib/linux_centos7_x86_64
        svn cleanup
        popd
    done
    popd
fi

if [[ ! -e ${WORK_DIR}/blender-src ]]; then
    time until git clone --depth 1 --branch blender-v2.93-release --single-branch https://git.blender.org/blender.git ${WORK_DIR}/blender-src; do
        rm -rf ${WORK_DIR}/blender-src
    done
fi

# Build blender python library
pushd ${WORK_DIR}/blender-src
time make update
time make -j${CORES} bpy
popd

# Install bpy into /root/.local - this creates a "user" install for the root user instead of a system install
pushd ${WORK_DIR}/build_linux_bpy
mkdir --parents /root/.local
sed -e 's|PYTHON_SITE_PACKAGES:FILEPATH=.*|PYTHON_SITE_PACKAGES:FILEPATH=/root/.local|' -i ${WORK_DIR}/build_linux_bpy/CMakeCache.txt
make -j${CORES} install
popd

rm -rf ${WORK_DIR} ${0}
